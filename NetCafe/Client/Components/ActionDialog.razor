@*OVERLAY*@
<div class="fixed w-full h-full z-50 top-0 right-0 bg-gray-700/50 flex justify-center items-center">
    @*DIALOG CONTENT*@
    <div
        class="w-[500px] lg:w-[500px] md:w-[500px] sm:w-[325px] px-4 py-5 bg-white ring-1 ring-slate-900/5 dark:ring-gray-600 rounded-lg dark:bg-slate-800 space-y-4">

        @*HEADER*@
        <div class="flex justify-between items-center ">
            <div>
                <h1 class="text-3xl font-bold dark:text-white">@Title</h1>
            </div>
            <div>
                <button @onclick="CancelClicked" type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
            </div>
        </div>

        @*BODY*@
        <div>
            @Content
        </div>

        @*FOOTER*@
        <div>
            @Footer
        </div>

    </div>
</div>

@code {
    public bool isToggled = false;
    [Parameter] public string? Title { get; set; }
    [Parameter] public Guid ResourceId { get; set; }
    [Parameter] public RenderFragment? Content { get; set; }
    [Parameter] public RenderFragment? Footer { get; set; }
    [Parameter] public EventCallback OnCancelClicked { get; set; }

    private void CancelClicked()
    {
        isToggled = false;
        OnCancelClicked.InvokeAsync();
    }
}
